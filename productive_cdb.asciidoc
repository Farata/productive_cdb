== Productive Enterprise Web Development with ExtJs and Clear Data Builder ==
by Viktor Gamov 

=== ExtJS MVC Application Scaffolding ===

In this article I'm going to tell you how can use open-source Eclipse Plug-in called Clear Data Builder to be more productive and do more with less while you are developing Enterprise Web applications with ExtJS and Java on the back end.
Here is a small agenda of first part of article. First, I want to explain what is a Clear Data Builder and how and where you can get it. How to install and start using it. Next I will show you how you can create an ExtJS application for Java project. 
This ExtJS MVS application will contain all directory structure recommended by  MVC Architecture from Sencha's Website and I'll show you how you can run your application on Tomcat. 
For this you will need Eclipse and you can get latest ??? version of Clear Tool Kit from Eclipse update site. This is the link. Link will be available as a part of show-notes. So, we see that right now major version is 1.1.4. you can always check what is the current available version from this link. Ok. So, once you install it. Let me show that I have it installed in my Eclipse. Here I have Clear Data Builder. And if you see this name over here inside Installed Software in your Eclipse you may sure that you can actually start doing application development. 
So, let me start with the creation of the new project. I'll say New and Other and select here Clear and click Next. And Clear Data Builder supports. First of all Clear Data Builder  is the set of project templates for Enterprise Web Development and on the Java side there is a bunch of different frameworks to support persistence or to support for example dependency injection in this case as Spring. And There is a bunch  of popular framework. you can use these templates to start the project, but in this case  I would like to start a new project  ?? and will show you what is default structure. First of all let me call it episode_1_intro. So, there are different ways how you can link ExtJS framework to this application. In my case I already have installed ExtJS libraries as a part of ??? I actually installed it on the my Web Server on the Tomcat. So I can use this local URL, but also you can just specify any folder in your machine and Clear Data Builder automatically copy file inside your project and also you can use the CDN from the Sencha. If you don't want to store these libraries inside your project you can use CDN from Sencha. In this screencast I don't want to use any frameworks, I don't want to use MyBatis or Hibernate, nothing and I don't want to have Spring integration. Ok, so let me click Finish. And as you might see here, first of all you will see output of initial setup of Clear Data Builder. Basically here  Clear Data Builder runs first time and it initializes directory structure and it this case let me show you ???? in the WebContent we have directory structure which is the recommended structure for MVC applications by Sencha. We have directory for application also we have here the HTML wrapper for this application and we will see link to entry of our application. Also by default Clear Data Builder generates empty project with one sample controller and one automatically created viewport. So, in this case let me run this application. And I'll use the Tomcat ?? and remove and add this project??? into Tomcat. And let me add here intro demo and let me start Tomcat. Ok, our application is up and running. 
Let me switch to web browser to open this application on local host  8080  and name of my project episode_1_intro. Boom! Just in couple minutes we got new project with the ExtJS framework and one fancy button. In this case we can see that our application is up and running. 

=== Simple CRUD application ===

Now I would like to tell you how to use Clear Data Builder to create CRUD applications. I'll show you how you can turn your Java POJO into ExtJS model class. I'll show you how you can populate  ExtJS store remote service and also I'll show you how you can use automatically generated UI for that application and how you can extend it and I would provide you with brief? Explanation of changed object.
As you remember we need to create  a new project Clear Data Builder for ExtJS Project and today I would like to use New Clear Data Builder Project. This project will be episode_2_crud and I'll keep the rest with defaults. For my CRUD application first of all I need a? JavaPOJO, so in this case let me create New class and it will be Java Class. I called this dto and it would be Person.java. My person.java. I would like to have few fields: First name, Last name, address, ssn and phone number and also we need assigned id to person. Let me generate Getters and Setters  for this. I would like to generate them to all my properties. Also it is good to have Here constructor for?? from me fields and also I would like to implement ?? `toString()` method. So far so good. Now I want to have the same corresponding ExtJS model for my Person. In this case I need to annotate this class with annotation called `@JSClass`. This annotation will tell Clear Data Builder to generate  the model. 

[source,java]
-----------------------------------------------------
include::Person.java[]
-----------------------------------------------------

For my model I also need to have id. With this annotation I'l tell to Clear Data Builder that this is my id. So, now lets examine the directory of ExtJS MVC application and lets take a look inside the model folder. Inside the model folder we have the folder dto which is the ?? same package as  we have  for our person.java POJO. And lets open person.model. In our case person.model is  extended from generated person.model. This pattern called generation gap. So, if we need to provide some kind of customization we can put this customization inside this person.model, but this underscore file will be generated each and every time when we change something in our model. As you can see here this model contains all fields from our project (что во рту опять???????: first name, id, last name, phone, ssn and etc.??? now we also need to have  actual service to populate data for store.  So, in this case I would like to create  java class in the package service and with name PersonService. Also it will be an interface 


